This is a fork/port of c0bra61's excellent MineSeeder application [1] using
nbt.py from codewarrior0's pymclevel [2] project which powers MCEdit.

nbt.py depends on numpy, available from PyPI or [3]. This project does not
depend on any additional modules.

Currently pyMineSeeder is nearly functionality-equivalent though it does not
have a GUI interface or the ability to add an inventory, however the method
which generates an NBT tree is designed to be extensible so the inventory
could be done easily if people consider it important.

The logic to deal with NBT trees and mineseeds is in codec.py. Although it can
be imported and called directly, codec.py is not meant to be used directly.
It presents an API for manipulating mineseeds through the Seed class it 
contains. Additional functionality for verifying and/or sanity-checking
mineseeds may be added later.

seeder.py constitutes a basic user interface. It can write a level.dat file
from a mineseed, and it can produce a mineseed from a level.dat file.

This project is considered a production-ready alpha, with the caveat it is
destructive by design when writing. Existing API calls are unlikely to be
changed, and if they are changes will be backwards-compatible.

API returns are subject to change. It's very ugly right now and expects
calling code to deal with exceptions.

References:
[1] https://github.com/c0bra61/MineSeeder
[2] https://github.com/codewarrior0/pymclevel
[3] http://numpy.scipy.org/
